name: http-c

on:
  schedule:
  - cron: '0 0 * * 1-5' # Every work day at 12AM

  push:
    branches: [main]
    paths:
    - 'http-c/**'
    - '.github/workflows/example-http-c.yaml'

  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    paths:
    - 'http-c/**'
    - '.github/workflows/example-http-c.yaml'

env:
  KRAFTCLOUD_TOKEN: ${{ secrets.KRAFTCLOUD_TOKEN }}
  KRAFTCLOUD_METRO: dal0
  KRAFTKIT_LOG_LEVEL: debug

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        repository: kraftcloud/catalog
        ref: main

    - name: Build base
      uses: unikraft/kraftkit@staging
      with:
        loglevel: debug
        workdir: library/base
        push: false
        output: oci://official-staging/base:latest
        auths: |
          github.com:
            user: ${{ secrets.GH_USER }}
            token: ${{ secrets.GH_TOKEN }}
        before: |
          set -xe;

          # Replace `prod-stable` with `staging` in the Kraftfile
          sed -i 's/prod-stable/staging/g' library/base/Kraftfile;

    - uses: actions/checkout@v4
      with:
        repository: kraftcloud/examples
        ref: main

    - name: Login to OCI registry
      uses: docker/login-action@v2
      with:
        registry: index.unikraft.io
        username: ${{ secrets.REG_USERNAME }}
        password: ${{ secrets.REG_TOKEN }}

    - name: Build and test
      uses: unikraft/kraftkit@staging
      with:
        loglevel: debug
        workdir: http-c
        auths: |
          github.com:
            user: ${{ secrets.GH_USER }}
            token: ${{ secrets.GH_TOKEN }}
        before: |
          set -xe;

          sed -i 's@base:latest@official-staging/base:latest@g' http-c/Kraftfile;
        after: |
          set -xe;

          cd http-c;

          kraft cloud deploy \
            --subdomain http-c-${GITHUB_RUN_ID} \
            --name http-c-${GITHUB_RUN_ID} \
            --memory 64M \
            -p 443:8080 \
            --rootfs Dockerfile \
            .;

          # wait for instance to start
          sleep 5;

          function cleanup {
            kraft cloud vm logs http-c-${GITHUB_RUN_ID};
            kraft cloud vm rm http-c-${GITHUB_RUN_ID} || true;
          }
          trap cleanup EXIT;

          curl -Lv --fail https://http-c-${GITHUB_RUN_ID}.${KRAFTCLOUD_METRO}.kraft.cloud/stats
